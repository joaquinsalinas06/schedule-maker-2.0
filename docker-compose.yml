services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: schedule_maker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/schedule_maker
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - CORS_ORIGINS=http://localhost:3001,http://127.0.0.1:3001,http://localhost:8001,ws://localhost:8001
      - DEBUG=True
      - WS_HOST=0.0.0.0
      - WS_PORT=8000
      # Admin user configuration (set these via environment variables)
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_FIRST_NAME=${ADMIN_FIRST_NAME:-Admin}
      - ADMIN_LAST_NAME=${ADMIN_LAST_NAME:-User}
      - ADMIN_STUDENT_ID=${ADMIN_STUDENT_ID:-ADMIN001}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/venv
      - .:/project
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8001
      - NEXT_PUBLIC_WS_URL=ws://localhost:8001
      - TURBOPACK=1
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    stdin_open: true
    tty: true

volumes:
  postgres_data: